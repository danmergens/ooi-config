package:
  name: pygsw
  version: "0.0.11"

source:
   git_url: https://github.com/oceanobservatories/pygsw
   git_rev: 8ba8a870c0583ae53fe051dfac5bb2c74c281045
#  fn: pygsw-0.0.10.tar.gz
#  url: https://files.pythonhosted.org/packages/59/be/8aaf47eab776403c088f06b10de4ac9a79dec7260f2a775a0450f4d09e42/pygsw-0.0.10.tar.gz
#  md5: 7cbb0feb7949071ed083cf69c24ec40b
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - pygsw = pygsw:main
    #
    # Would create an entry point called pygsw that calls pygsw.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools_cython
    - cython
    - libgswteos
    - numpy

  run:
    - python
    - libgswteos
    - numpy

test:
  # Python imports
  imports:
    - pygsw
    - pygsw.test

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/lukecampbell/pygsw/
  license: LICENSE.txt
  summary: 'Python bindings for the TEOS-10 V3.0 GSW Oceanographic Toolbox in C'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
