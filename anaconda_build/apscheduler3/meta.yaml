package:
  name: apscheduler
  version: "3.2.0"

source:
  fn: APScheduler-3.2.0.tar.gz
  url: https://files.pythonhosted.org/packages/c8/40/16a2df29261992cee18f6cba9731d9101302cc76d24794a332f6e567fe2f/APScheduler-3.2.0.tar.gz
  md5: db71a9cdf942cb210afe3926bcb0b5ed
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # noarch_python: True
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - apscheduler = apscheduler:main
    #
    # Would create an entry point called apscheduler that calls apscheduler.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools >=0.7
    - setuptools_scm
    - six >=1.4.0
    - pytz
    - tzlocal >=1.2
    - futures
    - funcsigs

  run:
    - python
    - setuptools >=0.7
    - six >=1.4.0
    - pytz
    - tzlocal >=1.2
    - futures
    - funcsigs

test:
  # Python imports
  imports:
    - apscheduler
    - apscheduler.executors
    - apscheduler.jobstores
    - apscheduler.schedulers
    - apscheduler.triggers
    - apscheduler.triggers.cron

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/agronholm/apscheduler
  license: MIT License
  summary: 'In-process task scheduler with Cron-like capabilities'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
